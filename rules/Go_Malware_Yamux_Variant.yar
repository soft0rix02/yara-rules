
rule Go_Malware_Yamux_Variant
{
    meta:
        description = "Detects a specific Go-based malware variant using the yamux library, with shared strings and constants across x86 and ARM architectures."
        author = "Gemini"
        date = "2025-07-08"
        reference_x86 = "asm_x86.txt"
        reference_arm = "asm_arm.txt"
		yarahub_reference_md5 = "68b329da9893e34099c7d8ad5cb9c940"
		yarahub_uuid = "d2623566-d475-44cd-95b9-9055a6160182"
		yarahub_license = "CC BY-NC-ND 4.0"
		yarahub_rule_matching_tlp = "TLP:WHITE"
		yarahub_rule_sharing_tlp = "TLP:WHITE"
		

    strings:
        // --- High-confidence library and regex strings ---
        $lib_yamux = "github.com/hashicorp/yamux"
        $regex_validation = "^[a-zA-Z]{10}\\n$" ascii

        // --- Shared function names from the main package ---
        $func_createLock = "main.createLock" ascii
        $func_isRunning = "main.isRunning" ascii

        // --- Shared Go standard library strings ---
        $go_json = "encoding/json.Unmarshal" ascii
        $go_regexp = "regexp.MustCompile" ascii

        // --- Shared constant: 0x3B9ACA00 (1,000,000,000) used for time.Sleep ---
        // This appears in both main functions 
        $const_sleep_ns = { 00 CA 9A 3B }

    condition:
        // Check for PE (x86) or ELF (ARM) file headers
        (uint32(0) == 0x45500000 or uint32be(0) == 0x7f454c46) and
        (
            // High-confidence match
            $lib_yamux and $regex_validation and $const_sleep_ns
        ) or
        (
            // Broader match with more components
            4 of them
        )
}